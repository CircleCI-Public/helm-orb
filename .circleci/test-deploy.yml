version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.1.2
  cli: circleci/circleci-cli@0.1.9
  kubernetes: circleci/kubernetes@1.3.0
  helm: circleci/helm@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.1
  queue: eddiewebb/queue@1.7.0

filters: &filters
  tags:
    only: /.*/

jobs:
  helm-client-install-test:
    docker:
      - image: cimg/python:3.10
    parameters:
      version:
        type: string
        description: version to install
        default: ""
    steps:
      - helm/install-helm-client:
          version: << parameters.version >>
  install-helm-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        description: Cluster name
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
  install-helm-chart-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      release-name:
        type: string
        default: "prometheus-community"
      cluster-name:
        type: string
        description: Cluster name
      helm-version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      add-repo:
        type: string
        default: "https://prometheus-community.github.io/helm-charts"
        description: the helm chart repository url to use
      chart: 
        type: string
        default: "prometheus-community/prometheus"
        description: the helm chart to install
      update-repositories:
        description: |
          Choose to update repositories by running helm repo update.
        type: boolean
        default: true
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << parameters.helm-version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/install-helm-chart:
          chart: << parameters.chart >>
          add-repo: << parameters.add-repo >>
          release-name: << parameters.release-name >>
          helm-version: << parameters.helm-version >>
          update-repositories: << parameters.update-repositories >>
  upgrade-helm-chart-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        description: Cluster name
      helm-version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      update-repositories:
        description: |
          Choose to update repositories by running helm repo update.
        type: boolean
        default: true
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << parameters.helm-version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/upgrade-helm-chart:
          chart: stable/prometheus
          release-name: prometheus-release
          helm-version: << parameters.helm-version >>
          update-repositories: << parameters.update-repositories >>
          # test specifying no-output-timeout
          no-output-timeout: 25m
  delete-helm-release-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        description: Cluster name
      helm-version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      timeout:
        type: string
        default: ""
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << parameters.helm-version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/delete-helm-release:
          release-name: prometheus-release
          purge: true
          timeout: << parameters.timeout >>
          helm-version: << parameters.helm-version >>
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - orb-tools/lint:
          filters: *filters
      - orb-tools/pack:
          filters: *filters
      - orb-tools/review:
          filters: *filters
      - orb-tools/publish:
          orb-name: circleci/helm
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/lint
            - orb-tools/review
            - orb-tools/pack
            - helm-client-install-latest
            - helm-client-install-specific-version
            - helm-client-install-latest
            - create-cluster-helm4
            - install-helm-chart-on-eks-cluster-helm4
            - upgrade-helm-chart-on-eks-cluster-helm4
            - delete-helm-release-on-eks-cluster-helm4
            - reinstall-helm-chart-on-eks-cluster-helm4
            - delete-helm-release-on-eks-cluster-again-helm4
            - delete-cluster-helm4
          github-token: GHI_TOKEN
          context: orb-publisher
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
      - helm-client-install-test:
          name: helm-client-install-latest
          filters: *filters
      - helm-client-install-test:
          name: helm-client-install-specific-version
          version: v3.0.0
          filters: *filters
      - aws-eks/create-cluster:
          name: create-cluster-helm4
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          filters: *filters
      - install-helm-chart-on-eks-cluster:
          name: install-helm-chart-on-eks-cluster-helm4
          helm-version: v3.8.2
          # test repo update
          update-repositories: true
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          add-repo: https://prometheus-community.github.io/helm-charts
          chart: prometheus-community/prometheus
          filters: *filters
          requires:
            - create-cluster-helm4
      - upgrade-helm-chart-on-eks-cluster:
          name: upgrade-helm-chart-on-eks-cluster-helm4
          helm-version: v3.8.2
          update-repositories: false
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          filters: *filters
          requires:
            - install-helm-chart-on-eks-cluster-helm4
      - delete-helm-release-on-eks-cluster:
          name: delete-helm-release-on-eks-cluster-helm4
          helm-version: v3.8.2
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          filters: *filters
          requires:
            - upgrade-helm-chart-on-eks-cluster-helm4
      - install-helm-chart-on-eks-cluster:
          name: reinstall-helm-chart-on-eks-cluster-helm4
          helm-version: v3.8.2
          # Test auto-generated release name
          release-name: ""
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          filters: *filters
          requires:
            - delete-helm-release-on-eks-cluster-helm4
      - delete-helm-release-on-eks-cluster:
          name: delete-helm-release-on-eks-cluster-again-helm4
          helm-version: v3.8.2
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          # test timeout
          timeout: "600s"
          filters: *filters
          requires:
            - reinstall-helm-chart-on-eks-cluster-helm4
      - aws-eks/delete-cluster:
          name: delete-cluster-helm4
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          wait: true
          filters: *filters
          requires:
            - delete-helm-release-on-eks-cluster-again-helm4