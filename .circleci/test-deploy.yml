version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2
  orb-tools: circleci/orb-tools@12.0
  helm: {}
filters: &filters
  tags:
    only: /.*/
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
jobs:
  helm-client-install-test:
    docker:
      - image: cimg/python:3.10
    parameters:
      version:
        type: string
        description: version to install
        default: ""
    steps:
      - helm/install_helm_client:
          version: << parameters.version >>
  helm-plugin-install-test:
    docker:
      - image: cimg/base:current
    parameters:
      helm_plugin_url:
        type: string
    steps:
      - helm/install_helm_plugin:
          helm_plugin_url: << parameters.helm_plugin_url >>
  install-helm-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        description: Cluster name
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
  install-helm-chart-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      release_name:
        type: string
        default: "prometheus-community"
      cluster-name:
        type: string
        description: Cluster name
      helm_version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      add_repo:
        type: string
        default: "https://prometheus-community.github.io/helm-charts"
        description: the helm chart repository url to use
      chart:
        type: string
        default: "prometheus-community/prometheus"
        description: the helm chart to install
      update_repositories:
        description: |
          Choose to update repositories by running helm repo update.
        type: boolean
        default: true
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: us-west-2
      - helm/install_helm_client:
          version: << parameters.helm_version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/install_helm_chart:
          chart: << parameters.chart >>
          add_repo: << parameters.add_repo >>
          release_name: << parameters.release_name >>
          helm_version: << parameters.helm_version >>
          update_repositories: << parameters.update_repositories >>
  upgrade-helm-chart-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      release_name:
        type: string
        default: "prometheus-community"
      add_repo:
        type: string
        default: "https://prometheus-community.github.io/helm-charts"
        description: the helm chart repository url to use
      cluster-name:
        type: string
        description: Cluster name
      helm_version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      chart:
        type: string
        default: "prometheus-community/prometheus"
        description: the helm chart to install
      update_repositories:
        description: |
          Choose to update repositories by running helm repo update.
        type: boolean
        default: true
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: us-west-2
      - helm/install_helm_client:
          version: << parameters.helm_version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/upgrade_helm_chart:
          add_repo: << parameters.add_repo >>
          chart: << parameters.chart >>
          release_name: << parameters.release_name >>
          helm_version: << parameters.helm_version >>
          update_repositories: << parameters.update_repositories >>
          # test specifying no_output_timeout
          no_output_timeout: 25m
  delete-helm-release-on-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        description: Cluster name
      helm_version:
        type: string
        default: "v3.8.2"
        description: the helm client version to install. e.g. v3.0.0
      timeout:
        type: string
        default: ""
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: us-west-2
      - helm/install_helm_client:
          version: << parameters.helm_version >>
      - run:
          name: Install cncf stable repo
          command: |
            helm repo add stable http://cncf.gitlab.io/stable
      - helm/delete_helm_release:
          release_name: prometheus-community
          purge: true
          timeout: << parameters.timeout >>
          helm_version: << parameters.helm_version >>
workflows:
  test-deploy:
    jobs:
      - helm-client-install-test:
          name: helm-client-install-latest
          filters: *filters
      - helm-client-install-test:
          name: helm-client-install-specific-version
          version: v3.0.0
          filters: *filters
      - helm-plugin-install-test:
          name: helm-plugin-install-env
          helm_plugin_url: https://github.com/adamreese/helm-env
          filters: *filters
      - aws-eks/create-cluster:
          name: create-cluster-helm4
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          filters: *filters
          context: CPE_ORBS_AWS
      - install-helm-chart-on-eks-cluster:
          name: install-helm-chart-on-eks-cluster-helm4
          helm_version: v3.8.2
          # test repo update
          update_repositories: true
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          add_repo: https://prometheus-community.github.io/helm-charts
          chart: prometheus-community/prometheus
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - create-cluster-helm4
      - upgrade-helm-chart-on-eks-cluster:
          name: upgrade-helm-chart-on-eks-cluster-helm4
          helm_version: v3.8.2
          update_repositories: false
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - install-helm-chart-on-eks-cluster-helm4
      - delete-helm-release-on-eks-cluster:
          name: delete-helm-release-on-eks-cluster-helm4
          helm_version: v3.8.2
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - upgrade-helm-chart-on-eks-cluster-helm4
      - install-helm-chart-on-eks-cluster:
          name: reinstall-helm-chart-on-eks-cluster-helm4
          helm_version: v3.8.2
          # Test auto-generated release name
          release_name: prometheus-community
          add_repo: https://prometheus-community.github.io/helm-charts
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - delete-helm-release-on-eks-cluster-helm4
      - delete-helm-release-on-eks-cluster:
          name: delete-helm-release-on-eks-cluster-again-helm4
          helm_version: v3.8.2
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          # test timeout
          timeout: "600s"
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - reinstall-helm-chart-on-eks-cluster-helm4
      - aws-eks/delete-cluster:
          name: delete-cluster-helm4
          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-helm4-eks
          aws-region: us-west-2
          wait: true
          context: CPE_ORBS_AWS
          filters: *filters
          requires:
            - delete-helm-release-on-eks-cluster-again-helm4
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: circleci/helm
          vcs_type: << pipeline.project.type >>
          pub_type: production
          enable_pr_comment: true
          requires:
            - orb-tools/pack
            - helm-client-install-latest
            - helm-client-install-specific-version
            - helm-client-install-latest
            - create-cluster-helm4
            - install-helm-chart-on-eks-cluster-helm4
            - upgrade-helm-chart-on-eks-cluster-helm4
            - delete-helm-release-on-eks-cluster-helm4
            - reinstall-helm-chart-on-eks-cluster-helm4
            - delete-helm-release-on-eks-cluster-again-helm4
            - delete-cluster-helm4
          context: orb-publisher
          filters: *release-filters
