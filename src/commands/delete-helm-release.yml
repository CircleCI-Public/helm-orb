description: |
  Deletes a helm release.
  Requirements: helm should be installed on the cluster
  and kubeconfig should be configured to connect to the cluster.

parameters:
  release-name:
    description: |
      Specify the release to be deleted.
    type: string
  purge:
    description: |
      Effective for helm 2 commands only (purging is the default in helm 3)
      Whether to remove the release from the store and make its name free for
      later use
    type: boolean
    default: false
  keep-history:
    description: |
      Effective for helm 3 commands only.
      Retains release history.
    type: boolean
    default: false
  timeout:
    description: |
      Specify a timeout value that will be passed as a --timeout argument
      to the helm command. For helm 3, the unit of the duration must
      be specified e.g. '300s'.
    type: string
    default: ""
  namespace:
    description: |
      The kubernetes namespace that should be used.
    type: string
    default: ""
  tls:
    description: |
      Enable TLS for the request
    type: boolean
    default: false
  tls-ca-cert:
    description: |
      Path to TLS CA certificate file
    type: string
    default: ""
  tls-cert:
    description: |
      Path to TLS certificate file
    type: string
    default: ""
  tls-hostname:
    description: |
      The server name used to verify the hostname on the returned
      certificates from the server
    type: string
    default: ""
  tls-key:
    description: |
      Path to TLS key file
    type: string
    default: ""
  tls-verify:
    description: |
      Enable TLS for request and verify remote
    type: boolean
    default: false
  tiller-namespace:
    description: |
      Specify the namespace of Tiller
    type: string
    default: ""
  helm-version:
    type: string
    default: "v2.16.9"
    description: the helm client version to install. e.g. v2.4.0
  no-output-timeout:
    description: |
      Elapsed time that the helm command can run on CircleCI without output.
      The string is a decimal with unit suffix, such as “20m”, “1.25h”, “5s”
    type: string
    default: "30m"

steps:
  - install-helm-client:
      version: << parameters.helm-version >>
  - run:
      name: Delete helm release
      command: |
        RELEASE_NAME="<< parameters.release-name >>"
        PURGE="<< parameters.purge >>"
        KEEP_HISTORY="<< parameters.keep-history >>"
        TIMEOUT="<< parameters.timeout >>"
        NAMESPACE="<< parameters.namespace >>"
        TLS="<< parameters.tls >>"
        TLS_CA_CERT="<< parameters.tls-ca-cert >>"
        TLS_CERT="<< parameters.tls-cert >>"
        TLS_HOSTNAME="<< parameters.tls-hostname >>"
        TLS_KEY="<< parameters.tls-key >>"
        TLS_VERIFY="<< parameters.tls-verify >>"

        if [ -n "${TIMEOUT}" ]; then
          set -- "$@" --timeout="${TIMEOUT}"
        fi
        if [ -n "${NAMESPACE}" ]; then
          set -- "$@" --namespace="${NAMESPACE}"
        fi
        if [ "${TLS}" == "true" ]; then
          set -- "$@" --tls
        fi
        if [ -n "${TLS_CA_CERT}" ]; then
          set -- "$@" --tls-ca-cert="${TLS_CA_CERT}"
        fi
        if [ -n "${TLS_CERT}" ]; then
          set -- "$@" --tls-cert="${TLS_CERT}"
        fi
        if [ -n "${TLS_HOSTNAME}" ]; then
          set -- "$@" --tls-hostname="${TLS_HOSTNAME}"
        fi
        if [ -n "${TLS_KEY}" ]; then
          set -- "$@" --tls-key="${TLS_KEY}"
        fi
        if [ "${TLS_VERIFY}" == "true" ]; then
          set -- "$@" --tls-verify
        fi

        VERSION_2_MATCH="$(helm version --short -c | grep 'Client: v2' || true)"
        if [ -n "${VERSION_2_MATCH}" ]; then
          if [ "${PURGE}" == "true" ]; then
            set -- "$@" --purge
          fi
        else
          if [ "${KEEP_HISTORY}" == "true" ]; then
            set -- "$@" --keep-history
          fi
        fi
        helm delete "$@" << parameters.release-name >>
      no_output_timeout: << parameters.no-output-timeout >>
