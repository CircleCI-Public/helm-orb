description: |
  Installs a helm chart.
  Requirements: helm should be installed on the cluster
  and kubeconfig should be configured to connect to the cluster.

parameters:
  chart:
    description: |
      Specify for installation a chart reference (e.g. stable/mariadb),
      or a path to a packaged chart (e.g. ./nginx-1.2.3.tgz),
      or a path to an unpacked chart directory (e.g. ./nginx)
      or an absolute URL (e.g. https://example.com/charts/nginx-1.2.3.tgz)
    type: string
  release-name:
    description: |
      Specify a name for the release.
    type: string
    default: ""
  values-to-override:
    description: |
      Override values in a chart using the --set flag of the helm install
      command. Format: key1=val1,key2=val2
    type: string
    default: ""
  namespace:
    description: |
      The kubernetes namespace that should be used.
    type: string
    default: ""
  tls:
    description: |
      Enable TLS for the request
    type: boolean
    default: false
  tls-ca-cert:
    description: |
      Path to TLS CA certificate file
    type: string
    default: ""
  tls-cert:
    description: |
      Path to TLS certificate file
    type: string
    default: ""
  tls-hostname:
    description: |
      The server name used to verify the hostname on the returned
      certificates from the server
    type: string
    default: ""
  tls-key:
    description: |
      Path to TLS key file
    type: string
    default: ""
  tls-verify:
    description: |
      Enable TLS for request and verify remote
    type: boolean
    default: false
  tiller-namespace:
    description: |
      Specify the namespace of Tiller
    type: string
    default: ""
  wait:
    description: |
      Whether to wait for the installation to be complete
    type: boolean
    default: true
  config:
    description: |
      An optional path to an environment file that overrides the default values for the chart.
    type: string
    default: ""

steps:
  - install-helm-client
  - run:
      name: Update repository
      command: |
        helm repo update
  - run:
      name: Install chart
      command: |
        RELEASE_NAME="<< parameters.release-name >>"
        VALUES_TO_OVERRIDE="<< parameters.values-to-override >>"
        NAMESPACE="<< parameters.namespace >>"
        TLS="<< parameters.tls >>"
        TLS_CA_CERT="<< parameters.tls-ca-cert >>"
        TLS_CERT="<< parameters.tls-cert >>"
        TLS_HOSTNAME="<< parameters.tls-hostname >>"
        TLS_KEY="<< parameters.tls-key >>"
        TLS_VERIFY="<< parameters.tls-verify >>"
        TILLER_NAMESPACE="<< parameters.tiller-namespace >>"
        WAIT="<< parameters.wait >>"
        CONFIG="<< parameters.config >>"
        if [ -n "${VALUES_TO_OVERRIDE}" ]; then
          set -- "$@" --set "${VALUES_TO_OVERRIDE}"
        fi
        if [ -n "${NAMESPACE}" ]; then
          set -- "$@" --namespace="${NAMESPACE}"
        fi
        if [ "${TLS}" == "true" ]; then
          set -- "$@" --tls
        fi
        if [ -n "${TLS_CA_CERT}" ]; then
          set -- "$@" --tls-ca-cert="${TLS_CA_CERT}"
        fi
        if [ -n "${TLS_CERT}" ]; then
          set -- "$@" --tls-cert="${TLS_CERT}"
        fi
        if [ -n "${TLS_HOSTNAME}" ]; then
          set -- "$@" --tls-hostname="${TLS_HOSTNAME}"
        fi
        if [ -n "${TLS_KEY}" ]; then
          set -- "$@" --tls-key="${TLS_KEY}"
        fi
        if [ "${TLS_VERIFY}" == "true" ]; then
          set -- "$@" --tls-verify
        fi
        if [ "${WAIT}" == "true" ]; then
          set -- "$@" --wait
        fi
        if [ -n "${CONFIG}" ]; then
          set -- "$@" -f "${CONFIG}"
        fi
        helm install << parameters.release-name >> << parameters.chart >> "$@"
